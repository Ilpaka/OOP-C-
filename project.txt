Основные компоненты проекта
Классы фигур
Были созданы отдельные классы для каждой шахматной фигуры:

King – отвечает за перемещения короля, проверяя, что ход осуществляется на соседнюю клетку.

Queen – реализует возможность перемещения по вертикали, горизонтали или диагонали.

Rooke – проверяет горизонтальные и вертикальные перемещения (сквозь свободные клетки).

Bishop – отвечает за диагональные перемещения.

Knight – реализует характерный для коня "буквообразный" ход.

Pawn – проверяет как обычное перемещение пешки, так и атаку по диагонали.

Для каждой фигуры реализованы методы, отвечающие за проверку корректности её хода с учетом геометрии перемещения и (в отдельных случаях) дополнительных условий (например, возможность двойного хода у пешки с начальной позиции).

Представление доски

Доска представлена в виде двумерного вектора строк размером 8×8, где каждая клетка содержит символ, обозначающий фигуру или пробел для пустой клетки.

Функция printBoard() отвечает за корректный вывод текущего состояния доски, отображая ряды и файлы в привычной шахматной нотации.

Проверка хода и логика игры

Функция pathClear() реализует проверку на наличие препятствий на пути скользящих фигур (ферзя, ладьи, слона).

Функция canPieceAttack() определяет, может ли фигура атаковать заданную клетку, используя соответствующий метод класса фигуры.

Реализована проверка состояния шаха через функции isSquareAttacked() и isKingInCheck(), позволяющая определить, находится ли король под угрозой.

Для обеспечения безопасности хода применяется функция moveLeavesKingSafe(), которая временно симулирует ход и проверяет, останется ли король в безопасности.

Рокировка и специальные ходы

Добавлена возможность выполнения рокировки как короткой (o-o), так и длинной (o-o-o) с учетом всех необходимых проверок: перемещение короля, отсутствие препятствий между королем и ладьей, отсутствие атаки на промежуточные клетки и первоначальное положение фигур.

Глобальные флаги фиксируют, были ли перемещены король или ладьи, что влияет на возможность последующих рокировок.

Интерактивность и игровой цикл

Проект предусматривает цикл ввода ходов пользователем, обработку формата ввода (например, "e2e4" или обозначения рокировки).

При каждом ходе происходит обновление доски, вывод текущего состояния, проверка на шах и, при отсутствии допустимых ходов, определяется победитель (шах и мат).

Итоговые результаты и выводы
Проект успешно реализует базовую механику шахмат, включая перемещения фигур, проверку корректности ходов, рокировку и обнаружение шаха.

Реализована симуляция игрового процесса с вводом ходов, что позволяет протестировать работу логики игры.

Основное внимание уделено валидации ходов: проверяются как общие условия (например, наличие свободного пути), так и специфические особенности каждого типа фигуры.

Несмотря на упрощённость, проект демонстрирует грамотное применение объектно-ориентированного подхода и структурирования кода.

В результате работы над проектом получен функциональный прототип шахматной игры, который может служить отправной точкой для дальнейшего расширения функциональности и усложнения логики игры.







